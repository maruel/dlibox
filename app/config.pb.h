/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6-dev */

#ifndef PB_CONFIG_PB_H_INCLUDED
#define PB_CONFIG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Wifi {
    bool has_ssid;
    char ssid[33];
    bool has_password;
    char password[64];
/* @@protoc_insertion_point(struct:Wifi) */
} Wifi;

typedef struct _Config {
    bool has_wifiClient;
    Wifi wifiClient;
    bool has_wifiAP;
    Wifi wifiAP;
    bool has_romURL;
    char romURL[128];
    bool has_name;
    char name[32];
    bool has_highSpeed;
    bool highSpeed;
/* @@protoc_insertion_point(struct:Config) */
} Config;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Wifi_init_default                        {false, "", false, ""}
#define Config_init_default                      {false, Wifi_init_default, false, Wifi_init_default, false, "", false, "", false, 0}
#define Wifi_init_zero                           {false, "", false, ""}
#define Config_init_zero                         {false, Wifi_init_zero, false, Wifi_init_zero, false, "", false, "", false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Wifi_ssid_tag                            1
#define Wifi_password_tag                        2
#define Config_wifiClient_tag                    1
#define Config_wifiAP_tag                        2
#define Config_romURL_tag                        3
#define Config_name_tag                          4
#define Config_highSpeed_tag                     5

/* Struct field encoding specification for nanopb */
extern const pb_field_t Wifi_fields[3];
extern const pb_field_t Config_fields[6];

/* Maximum encoded size of messages (where known) */
#define Wifi_size                                101
#define Config_size                              373

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define CONFIG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
